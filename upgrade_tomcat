#Script para atualização de tomcat
#Criado por Josimar
#!/bin/bash
start() {
    systemdfolder="/etc/systemd/system"
    tomcatdir="/usr/local/$tomcatsvcname"
    tomcatversion="9.0.89"
    cat $systemdfolder/$tomcatsvcname.service | grep 'WorkingDirectory' | cut -d= -f2 | sed 's/[[:space:]]//g' | grep running
    if [ $? -eq 0 ]; then
        #Running word found!
        tomcatdir=$(cat $systemdfolder/$tomcatsvcname.service | grep 'WorkingDirectory' | cut -d= -f2 | awk -F '/running' '{print $1}')
    else
        #Running word not found!
        tomcatdir=$(cat $systemdfolder/$tomcatsvcname.service | grep 'WorkingDirectory' | cut -d= -f2 | sed 's/[[:space:]]//g')
    fi

    tomcatrunning="$tomcatdir/running"
    webapps="$tomcatdir/$tomcatversion/webapps"
    java_home=$(java -XshowSettings:properties -version 2>&1 >/dev/null | grep 'java.home' | cut -d= -f2 | sed 's/^[[:blank:]]*//')
    tomcat_memory=$(grep -o 'Xmx[^*]*' $systemdfolder/$tomcatsvcname.service | grep -oP '(?<=Xmx)\d+(?=M)')
    tomcat_xms=$(grep -o 'Xms[^*]*' $systemdfolder/$tomcatsvcname.service  | grep -oP '(?<=Xms)\d+(?=M)')
    actualtomcatversion=$(java -cp $tomcatdir/lib/catalina.jar org.apache.catalina.util.ServerInfo |  grep 'Server version' | awk -F ': ' '{print $2}')

    echo "----------------- RESUMO da ATUALIZAÇÂO ------------------------------------------"
    echo "tomcatdir: $tomcatdir"
    echo "Tomcat Version to Install: $tomcatversion"
    echo "Tomcat Running new Folder: $tomcatrunning"
    echo "Actual tomcat Memory: $tomcat_memory"
    echo "Actual tomcat version: $actualtomcatversion"

    echo "Confirma atualização? y/n"
    read -p "R:" confirm
    if [ $confirm == "y" ]; then
        echo "Confirmed"
        #Stop service
    systemctl stop $tomcatsvcname

    # Creating folder
    cd $tomcatdir
    sudo mkdir running >/dev/null
    sudo rm -R $tomcatversion
    sudo mkdir $tomcatversion && cd $tomcatversion

    #Download the version of tomcat:
    sudo wget https://archive.apache.org/dist/tomcat/tomcat-9/v$tomcatversion/bin/apache-tomcat-$tomcatversion.tar.gz

    #extract content:
    sudo tar -xzf apache-tomcat-$tomcatversion.tar.gz --strip-components=1

    #create tomcat user:
    id -u tomcat &>/dev/null || sudo useradd -r -m -U -d $tomcatdir -s /bin/false tomcat

    # remove old an create new symbolic  links
    sudo rm -R $tomcatrunning/*
    sudo ln -s $tomcatdir/$tomcatversion/* $tomcatrunning
    # Now, if you wish to install Tomcat on Linux with a newer version in future, simply unpack the new archive and change the symbolic link so that it points to the new version.

    #Copy server.xml

    #Adjust directory permissions:
    sudo chown -R tomcat: $tomcatdir*

    #update executables permissions:
    sudo chmod +x $tomcatrunning/bin/*.sh

    #Create systemd service:
    echo >$systemdfolder/$tomcatsvcname.service
    echo "Description=Tomcat 9 se{{ let container
        After=network.target
        [Service]
        Type=forking
        WorkingDirectory=$tomcatrunning
        User=tomcat
        Group=tomcat
        Environment=JAVA_HOME=$java_home
        Environment=JAVA_OPTS=-Djava.security.egd=file:///dev/urandom
        Environment=CATALINA_BASE=$tomcatrunning
        Environment=CATALINA_HOME=$tomcatrunning
        Environment=CATALINA_PID=$tomcatrunning/temp/$tomcatsvcname.pid
        Environment=CATALINA_OPTS=-Xms${tomcat_xms}M -Xmx${tomcat_memory}M -server -XX:+UseParallelGC
        ExecStart=$tomcatrunning/bin/startup.sh
        ExecStop=$tomcatrunning/bin/shutdown.sh

        [Install]
        WantedBy=multi-user.target" >>$systemdfolder/$tomcatsvcname.service

    systemctl daemon-reload
    sudo systemctl enable $tomcatsvcname
    sudo rm -R $webapps/*
    sudo cp $tomcatdir/webapps/*.war $webapps/
    sudo cp $tomcatdir/conf/server.xml $tomcatdir/$tomcatversion/conf/server.xml
    sudo systemctl start $tomcatsvcname
    sudo systemctl status $tomcatsvcname

    else
        echo "skip"
        exit 1
    fi

    
}

tomcatsvc() {
    systemctl list-unit-files --type=service | grep \.service | grep tomcat | awk -F '.service' '{print $1}'
}

myArray=$(tomcatsvc)

if [[ -z "$myArray" ]]; then
    echo "No Tomcat services found."
    exit 1
fi

echo "Tomcat services:"
echo "$myArray" | nl -w 2 -s '. '

echo "Digite quais versões serão atualizadas separado por espaços.(e.g., 1 2 3):"
read -p "Opção escolhida: " choices

for choice in $choices; do
    tomcatsvcname=$(echo "$myArray" | sed -n "${choice}p")
    if [[ -n "$tomcatsvcname" ]]; then
        echo "tomcat escolhido: $choice:"
        printf "$tomcatsvcname \n  "
        start
    else
        echo "Invalid choice: $choice"
    fi

done

#TOdo: Resumo da atualização;
# move olde folder
# test if runnning
